<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ysu.Model.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="ysu.Model.po.Message">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Send_user_id" jdbcType="INTEGER" property="sendUserId" />
    <result column="Recive_user_id" jdbcType="INTEGER" property="reciveUserId" />
    <result column="Content" jdbcType="VARCHAR" property="content" />
    <result column="Creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="Is_read" jdbcType="INTEGER" property="isRead" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Send_user_id, Recive_user_id, Content, Creat_time, Is_read
  </sql>
  <select id="selectByExample" parameterType="ysu.Model.po.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Message
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Message
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ysu.Model.po.MessageExample">
    delete from Message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ysu.Model.po.Message">
    insert into Message (Id, Send_user_id, Recive_user_id, 
      Content, Creat_time, Is_read
      )
    values (#{id,jdbcType=INTEGER}, #{sendUserId,jdbcType=INTEGER}, #{reciveUserId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, #{isRead,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="ysu.Model.po.Message">
    insert into Message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="sendUserId != null">
        Send_user_id,
      </if>
      <if test="reciveUserId != null">
        Recive_user_id,
      </if>
      <if test="content != null">
        Content,
      </if>
      <if test="creatTime != null">
        Creat_time,
      </if>
      <if test="isRead != null">
        Is_read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sendUserId != null">
        #{sendUserId,jdbcType=INTEGER},
      </if>
      <if test="reciveUserId != null">
        #{reciveUserId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ysu.Model.po.MessageExample" resultType="java.lang.Long">
    select count(*) from Message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Message
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sendUserId != null">
        Send_user_id = #{record.sendUserId,jdbcType=INTEGER},
      </if>
      <if test="record.reciveUserId != null">
        Recive_user_id = #{record.reciveUserId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        Content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.creatTime != null">
        Creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isRead != null">
        Is_read = #{record.isRead,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Message
    set Id = #{record.id,jdbcType=INTEGER},
      Send_user_id = #{record.sendUserId,jdbcType=INTEGER},
      Recive_user_id = #{record.reciveUserId,jdbcType=INTEGER},
      Content = #{record.content,jdbcType=VARCHAR},
      Creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      Is_read = #{record.isRead,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ysu.Model.po.Message">
    update Message
    <set>
      <if test="sendUserId != null">
        Send_user_id = #{sendUserId,jdbcType=INTEGER},
      </if>
      <if test="reciveUserId != null">
        Recive_user_id = #{reciveUserId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        Content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null">
        Creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRead != null">
        Is_read = #{isRead,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ysu.Model.po.Message">
    update Message
    set Send_user_id = #{sendUserId,jdbcType=INTEGER},
      Recive_user_id = #{reciveUserId,jdbcType=INTEGER},
      Content = #{content,jdbcType=VARCHAR},
      Creat_time = #{creatTime,jdbcType=TIMESTAMP},
      Is_read = #{isRead,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>