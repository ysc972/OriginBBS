<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yd.springboot.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="cn.yd.springboot.po.Comment">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="Content" jdbcType="VARCHAR" property="content" />
    <result column="Username" jdbcType="VARCHAR" property="username" />
    <result column="Recommend" jdbcType="INTEGER" property="recommend" />
    <result column="Post_id" jdbcType="INTEGER" property="postId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Parent_id, Content, Username, Recommend, Post_id
  </sql>
  <select id="selectByExample" parameterType="cn.yd.springboot.po.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Comment
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Comment
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yd.springboot.po.CommentExample">
    delete from Comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yd.springboot.po.Comment">
    insert into Comment (Id, Parent_id, Content, 
      Username, Recommend, Post_id
      )
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{recommend,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yd.springboot.po.Comment">
    insert into Comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="parentId != null">
        Parent_id,
      </if>
      <if test="content != null">
        Content,
      </if>
      <if test="username != null">
        Username,
      </if>
      <if test="recommend != null">
        Recommend,
      </if>
      <if test="postId != null">
        Post_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yd.springboot.po.CommentExample" resultType="java.lang.Long">
    select count(*) from Comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Comment
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        Parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        Content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        Username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.recommend != null">
        Recommend = #{record.recommend,jdbcType=INTEGER},
      </if>
      <if test="record.postId != null">
        Post_id = #{record.postId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Comment
    set Id = #{record.id,jdbcType=INTEGER},
      Parent_id = #{record.parentId,jdbcType=INTEGER},
      Content = #{record.content,jdbcType=VARCHAR},
      Username = #{record.username,jdbcType=VARCHAR},
      Recommend = #{record.recommend,jdbcType=INTEGER},
      Post_id = #{record.postId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yd.springboot.po.Comment">
    update Comment
    <set>
      <if test="parentId != null">
        Parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        Content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        Username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null">
        Recommend = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        Post_id = #{postId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yd.springboot.po.Comment">
    update Comment
    set Parent_id = #{parentId,jdbcType=INTEGER},
      Content = #{content,jdbcType=VARCHAR},
      Username = #{username,jdbcType=VARCHAR},
      Recommend = #{recommend,jdbcType=INTEGER},
      Post_id = #{postId,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>